// <auto-generated />
using System;
using AuroraAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuroraAPI.Migrations
{
    [DbContext(typeof(medicalContext))]
    partial class medicalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuroraAPI.Models.ContactPhone", b =>
                {
                    b.Property<string>("Contact_Phone")
                        .HasColumnName("contact_phone")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<int>("Contact_Code")
                        .HasColumnName("contact_code")
                        .HasColumnType("int");

                    b.HasKey("Contact_Phone");

                    b.HasIndex("Contact_Code");

                    b.ToTable("contact_phone");
                });

            modelBuilder.Entity("AuroraAPI.Models.Doses1", b =>
                {
                    b.Property<int>("Dose_Code")
                        .HasColumnName("dose_code")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dose_Date")
                        .HasColumnName("dose_date")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Dose_Time")
                        .HasColumnName("dose_time")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Time_Of_Abuse")
                        .HasColumnName("Time_of_abuse")
                        .HasColumnType("time");

                    b.HasKey("Dose_Code");

                    b.ToTable("Doses (1)");
                });

            modelBuilder.Entity("AuroraAPI.Models.Ec", b =>
                {
                    b.Property<int>("Contact_Code")
                        .HasColumnName("contact_code")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Last_Name")
                        .HasColumnName("last_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("User_Id")
                        .HasColumnName("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Contact_Code");

                    b.HasIndex("User_Id");

                    b.ToTable("EC");
                });

            modelBuilder.Entity("AuroraAPI.Models.Medicine", b =>
                {
                    b.Property<int>("Medicine_Code")
                        .HasColumnName("medicine_code")
                        .HasColumnType("int");

                    b.Property<string>("Medicine_Name")
                        .IsRequired()
                        .HasColumnName("Medicine_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No_Of_Pills_In_Tape")
                        .HasColumnName("no_of_pills_in_tape")
                        .HasColumnType("int");

                    b.Property<int>("No_Of_Tapes")
                        .HasColumnName("no_of_tapes")
                        .HasColumnType("int");

                    b.HasKey("Medicine_Code");

                    b.ToTable("Medicine");
                });

            modelBuilder.Entity("AuroraAPI.Models.UserDoseMedicine", b =>
                {
                    b.Property<int>("Dose_Code")
                        .HasColumnName("dose_code")
                        .HasColumnType("int");

                    b.Property<int>("Medicine_Code")
                        .HasColumnName("medicine_code")
                        .HasColumnType("int");

                    b.Property<int>("Number_Of_Pills")
                        .HasColumnName("number_of_pills")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnName("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Dose_Code");

                    b.HasIndex("Medicine_Code");

                    b.HasIndex("User_Id");

                    b.ToTable("user_dose_medicine");
                });

            modelBuilder.Entity("AuroraAPI.Models.UserPhone", b =>
                {
                    b.Property<string>("User_Phone")
                        .HasColumnName("user_phone")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<int>("User_Id")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("User_Phone");

                    b.HasIndex("User_Id");

                    b.ToTable("user_phone");
                });

            modelBuilder.Entity("AuroraAPI.Models.Users", b =>
                {
                    b.Property<int>("User_Id")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnName("age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Last_Name")
                        .HasColumnName("last_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("User_Email")
                        .HasColumnName("user_email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Weight")
                        .HasColumnName("weight")
                        .HasColumnType("float");

                    b.HasKey("User_Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("AuroraAPI.Models.ContactPhone", b =>
                {
                    b.HasOne("AuroraAPI.Models.Ec", "Contact_CodeNavigation")
                        .WithMany("ContactPhone")
                        .HasForeignKey("Contact_Code")
                        .HasConstraintName("FK_contact_phone_EC")
                        .IsRequired();
                });

            modelBuilder.Entity("AuroraAPI.Models.Ec", b =>
                {
                    b.HasOne("AuroraAPI.Models.Users", "User")
                        .WithMany("Ec")
                        .HasForeignKey("User_Id")
                        .HasConstraintName("FK_EC_users")
                        .IsRequired();
                });

            modelBuilder.Entity("AuroraAPI.Models.UserDoseMedicine", b =>
                {
                    b.HasOne("AuroraAPI.Models.Doses1", "Dose_CodeNavigation")
                        .WithMany()
                        .HasForeignKey("Dose_Code")
                        .HasConstraintName("FK_user_dose_medicin_dose")
                        .IsRequired();

                    b.HasOne("AuroraAPI.Models.Medicine", "Medicine_CodeNavigation")
                        .WithMany()
                        .HasForeignKey("Medicine_Code")
                        .HasConstraintName("FK_user_dose_medicinemedicine")
                        .IsRequired();

                    b.HasOne("AuroraAPI.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .HasConstraintName("FK_user_dose_medicine_user")
                        .IsRequired();
                });

            modelBuilder.Entity("AuroraAPI.Models.UserPhone", b =>
                {
                    b.HasOne("AuroraAPI.Models.Users", "User")
                        .WithMany("UserPhone")
                        .HasForeignKey("User_Id")
                        .HasConstraintName("FK_user_phone_user")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
